services:
  # Backend service for the War Room platform
  # This is the actual service running at war-room-oa9t.onrender.com
  - type: web
    name: war-room
    runtime: python
    plan: starter
    
    # Build Configuration
    buildCommand: |
      cd src/backend && pip install -r requirements.txt
      cd ../frontend && npm ci && npm run build
    
    # Start Command - serves both frontend and backend
    startCommand: cd src/backend && python serve_bulletproof.py
    
    # Health Check Configuration
    healthCheckPath: /health
    
    # Environment Variables (set in Render dashboard)
    envVars:
      - key: PYTHON_VERSION
        value: "3.11"
      - key: NODE_VERSION
        value: "18"
      - key: PORT
        value: "10000"
      - key: NODE_ENV
        value: "production"
      - key: BUILD_ID
        value: "2025-08-09T08:02:53Z"
      
    # Auto-deploy from GitHub
    repo: https://github.com/Think-Big-Media/1.0-war-room
    branch: main
    autoDeploy: true
    
  # Static frontend service (optional - for separating frontend)
  - type: web
    name: war-room-frontend
    runtime: static
    
    # Build Configuration
    buildCommand: npm ci && npm run build
    
    # Static File Configuration
    staticPublishPath: ./dist
    
    # Preview Environment
    pullRequestPreviewsEnabled: true
    
    # Cache Control Headers
    headers:
      - path: /*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
    
    # Routing Configuration for SPA
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

# Database Configuration (if using Render PostgreSQL)
databases:
  - name: warroom-db
    plan: starter
    databaseName: warroom
    user: warroom

# Redis Configuration (if using Render Redis)
services:
  - type: redis
    name: warroom-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru