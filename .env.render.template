# ==============================================================================
# WAR ROOM ANALYTICS PLATFORM - RENDER.COM ENVIRONMENT TEMPLATE
# ==============================================================================
# This template contains ALL environment variables required for production
# deployment on Render.com. Copy these to your Render service environment
# variables and fill in the actual values.
# 
# IMPORTANT: Never commit real credentials to version control
# ==============================================================================

# ==============================================================================
# DEPLOYMENT METADATA
# ==============================================================================
# These help identify your deployment environment
RENDER_ENV=production
RENDER_SERVICE_ID=srv-d1ub5iumcj7s73ebrpo0
APP_NAME="War Room Analytics"
APP_VERSION="1.0.0"
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# ==============================================================================
# RUNTIME CONFIGURATION
# ==============================================================================
# Python and Node versions (must match render.yaml)
PYTHON_VERSION=3.11.0
NODE_VERSION=18.17.0

# API Configuration
API_V1_STR=/api/v1

# ==============================================================================
# SECURITY & JWT CONFIGURATION
# ==============================================================================
# CRITICAL: Use Render's "Generate Value" feature for these secrets
# Never use the example values below in production!

# JWT Secrets (REQUIRED - Use Render's Generate Value)
SECRET_KEY=RENDER_GENERATE_THIS_SECRET_KEY_AUTOMATICALLY
JWT_SECRET=RENDER_GENERATE_THIS_JWT_SECRET_AUTOMATICALLY
JWT_ALGORITHM=HS256
ALGORITHM=HS256

# JWT Expiration Settings
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
# PostgreSQL Connection (Use Render database references)
# In Render dashboard, use: ${war-room-db.connectionString}
DATABASE_URL=postgresql://user:password@host:port/warroom

# Database Pool Settings (Production Optimized)
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40
DB_POOL_RECYCLE=3600
DB_POOL_PRE_PING=true
DB_POOL_TIMEOUT=30
DB_ECHO=false

# ==============================================================================
# REDIS CACHE CONFIGURATION
# ==============================================================================
# Redis Connection (Use Render Redis references)
# In Render dashboard, use: ${war-room-redis.connectionString}
REDIS_URL=redis://user:password@host:port

# Redis Pool Settings
REDIS_POOL_MIN_SIZE=10
REDIS_POOL_MAX_SIZE=20
REDIS_MAX_CONNECTIONS=50

# Cache TTL Settings (seconds)
ANALYTICS_CACHE_TTL=300      # 5 minutes
USER_ACTIVITY_CACHE_TTL=1800 # 30 minutes

# ==============================================================================
# SUPABASE CONFIGURATION (REQUIRED)
# ==============================================================================
# Get these values from your Supabase project dashboard
# Project Settings > API > URL and anon key

# Frontend Supabase Variables
VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Legacy React App Support (for backward compatibility)
REACT_APP_SUPABASE_URL=https://your-project-id.supabase.co
REACT_APP_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Backend Supabase Configuration (Optional - for server-side operations)
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key-here
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# ==============================================================================
# API BASE URLS (UPDATE WITH YOUR DOMAIN)
# ==============================================================================
# Replace 'your-domain.com' with your actual domain
# During setup, you can use the Render-provided domain initially

# Backend API URLs
API_BASE_URL=https://your-domain.com
VITE_API_URL=https://your-domain.com
VITE_API_BASE_URL=https://your-domain.com

# ==============================================================================
# CORS CONFIGURATION (SECURITY CRITICAL)
# ==============================================================================
# IMPORTANT: Update with your actual domain(s) only
# Never use wildcards (*) in production
BACKEND_CORS_ORIGINS=https://your-domain.com
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=86400  # 24 hours

# ==============================================================================
# POSTHOG ANALYTICS (REQUIRED)
# ==============================================================================
# Get these from PostHog dashboard: Project Settings > Project API Key
POSTHOG_KEY=your-posthog-project-key-here
POSTHOG_HOST=https://app.posthog.com
POSTHOG_ENABLED=true
POSTHOG_API_KEY=your-posthog-api-key-here
POSTHOG_PERSON_PROFILES=identified_only

# Frontend PostHog Variables
VITE_POSTHOG_KEY=your-posthog-project-key-here
VITE_POSTHOG_HOST=https://app.posthog.com

# ==============================================================================
# SENTRY ERROR TRACKING (REQUIRED)
# ==============================================================================
# Get DSN from Sentry: Project Settings > Client Keys (DSN)
SENTRY_DSN=https://your-sentry-dsn-key@o12345.ingest.sentry.io/67890
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# ==============================================================================
# WEBSOCKET CONFIGURATION
# ==============================================================================
# Real-time features configuration
WS_HEARTBEAT_INTERVAL=30
WS_MESSAGE_QUEUE_SIZE=100
WS_CONNECTION_TIMEOUT=60
ANALYTICS_UPDATE_INTERVAL=5

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================
# Control which features are enabled

# Backend Features
ENABLE_ANALYTICS=true
ENABLE_AUTOMATION=true
ENABLE_DOCUMENT_INTELLIGENCE=false  # Enable after AI services configured
ENABLE_REAL_TIME_UPDATES=true
ENABLE_EXPORT_FEATURE=true
ENABLE_ADVANCED_ANALYTICS=true

# Frontend Features (Vite/React)
VITE_ENV=production
VITE_ENABLE_ANALYTICS=true
VITE_ENABLE_AUTOMATION=true
VITE_ENABLE_DOCUMENT_INTELLIGENCE=false
VITE_ENABLE_GOOGLE_AUTH=false
VITE_ENABLE_GITHUB_AUTH=false
VITE_FORCE_MOCK_MODE=false

# Legacy React App Features (backward compatibility)
REACT_APP_ENV=production
REACT_APP_ENABLE_ANALYTICS=true
REACT_APP_ENABLE_AUTOMATION=true
REACT_APP_ENABLE_DOCUMENT_INTELLIGENCE=false
REACT_APP_ENABLE_GOOGLE_AUTH=false
REACT_APP_ENABLE_GITHUB_AUTH=false
REACT_APP_DEFAULT_ORG_ID=""

# ==============================================================================
# RATE LIMITING & PERFORMANCE
# ==============================================================================
# API rate limiting
RATE_LIMIT_ANALYTICS=30/minute
RATE_LIMIT_EXPORT=10/hour
RATE_LIMIT_WEBSOCKET=100/minute

# Export Settings
MAX_EXPORT_ROWS=10000
EXPORT_TIMEOUT=300
PDF_GENERATION_TIMEOUT=60

# Performance Settings
MAX_CHART_DATA_POINTS=10000
AGGREGATION_THRESHOLD=1000

# ==============================================================================
# MONITORING & HEALTH CHECKS
# ==============================================================================
HEALTH_CHECK_ENABLED=true
ENABLE_METRICS=true
LOG_FORMAT=json

# ==============================================================================
# PLATFORM ADMIN CONFIGURATION
# ==============================================================================
# Email addresses that have platform admin access
PLATFORM_ADMIN_EMAILS=admin@your-domain.com

# ==============================================================================
# AD MONITORING CONFIGURATION
# ==============================================================================
# Thresholds for automated alerts
SPEND_THRESHOLD_PERCENTAGE=80
PERFORMANCE_DROP_THRESHOLD=20
MONITORING_INTERVAL_SECONDS=300

# ==============================================================================
# OPTIONAL INTEGRATIONS (CONFIGURE WHEN READY)
# ==============================================================================

# ------------------------------------------------------------------------------
# META/FACEBOOK BUSINESS API (OPTIONAL)
# ------------------------------------------------------------------------------
# Uncomment and configure these when ready to enable Meta integration
# Get these from Meta for Developers dashboard

# META_APP_ID=your-meta-app-id
# META_APP_SECRET=your-meta-app-secret
# META_ACCESS_TOKEN=your-meta-access-token
# META_DEFAULT_ACCOUNT_ID=your-ad-account-id

# Frontend Meta Variables
# VITE_META_APP_ID=your-meta-app-id
# VITE_META_APP_SECRET=your-meta-app-secret
# VITE_META_ACCESS_TOKEN=your-meta-access-token
# VITE_META_REDIRECT_URI=https://your-domain.com/auth/meta/callback

# ------------------------------------------------------------------------------
# GOOGLE ADS API (OPTIONAL)
# ------------------------------------------------------------------------------
# Uncomment and configure these when ready to enable Google Ads integration
# Get these from Google Ads API Console and Google Cloud Console

# GOOGLE_ADS_DEVELOPER_TOKEN=your-google-ads-developer-token
# GOOGLE_ADS_CLIENT_ID=your-google-oauth-client-id
# GOOGLE_ADS_CLIENT_SECRET=your-google-oauth-client-secret
# GOOGLE_ADS_LOGIN_CUSTOMER_ID=your-login-customer-id

# Frontend Google Ads Variables
# VITE_GOOGLE_ADS_CLIENT_ID=your-google-oauth-client-id
# VITE_GOOGLE_ADS_CLIENT_SECRET=your-google-oauth-client-secret
# VITE_GOOGLE_CLIENT_ID=your-google-oauth-client-id

# Google Service Account (for server-to-server authentication)
# GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account",...}

# ------------------------------------------------------------------------------
# AI & MACHINE LEARNING SERVICES (OPTIONAL)
# ------------------------------------------------------------------------------
# OpenAI API for AI-powered features
# OPENAI_API_KEY=your-openai-api-key
# OPENAI_MODEL_EMBEDDING=text-embedding-ada-002
# OPENAI_MODEL_CHAT=gpt-4

# Frontend OpenAI Configuration
# VITE_OPENAI_API_KEY=your-openai-api-key

# Pinecone Vector Database
# PINECONE_API_KEY=your-pinecone-api-key
# PINECONE_ENVIRONMENT=us-east-1
# PINECONE_INDEX_NAME=warroom-documents
# PINECONE_INDEX_HOST=your-pinecone-index-host

# Frontend Pinecone Configuration
# VITE_PINECONE_API_KEY=your-pinecone-api-key
# VITE_PINECONE_ENVIRONMENT=us-east-1
# VITE_PINECONE_INDEX_NAME=warroom-documents
# VITE_PINECONE_HOST=your-pinecone-index-host

# Document Processing Settings
# MAX_DOCUMENT_SIZE_MB=25
# DOCUMENT_CHUNK_SIZE=1000
# DOCUMENT_CHUNK_OVERLAP=200
# MAX_SEARCH_RESULTS=10

# ------------------------------------------------------------------------------
# COMMUNICATION SERVICES (OPTIONAL)
# ------------------------------------------------------------------------------
# SendGrid for email delivery
# SENDGRID_API_KEY=your-sendgrid-api-key
# VITE_SENDGRID_API_KEY=your-sendgrid-api-key

# Twilio for SMS and voice
# TWILIO_ACCOUNT_SID=your-twilio-account-sid
# TWILIO_AUTH_TOKEN=your-twilio-auth-token
# TWILIO_PHONE_NUMBER=your-twilio-phone-number
# TWILIO_WHATSAPP_NUMBER=whatsapp:your-whatsapp-number

# Frontend Twilio Configuration
# VITE_TWILIO_ACCOUNT_SID=your-twilio-account-sid

# Email Configuration
# NOTIFICATION_EMAIL=notifications@your-domain.com

# ------------------------------------------------------------------------------
# WEBHOOK NOTIFICATIONS (OPTIONAL)
# ------------------------------------------------------------------------------
# Team notification webhooks
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your-webhook
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your-webhook
# TEAMS_WEBHOOK_URL=https://your-team.webhook.office.com/your-webhook

# ==============================================================================
# RENDER.COM SPECIFIC CONFIGURATION
# ==============================================================================

# Render API key for automation (set in GitHub/Render; never commit real values)
# Create in Render dashboard → Account Settings → API Keys
RENDER_API_KEY=

# Optional: Deploy Hook URL (preferred for triggering deployments)
# Found under Service → Settings → Deploy Hook
RENDER_DEPLOY_HOOK_URL=

# Health check endpoint (Render uses this)
# Endpoint: /health (configured in render.yaml)

# Auto-scaling configuration (if using higher plans)
# Render handles this automatically based on CPU/memory usage

# Disk storage (if enabled in render.yaml)
# Mount path: /opt/render/project/src/backend/storage
# Use for: temporary files, logs, uploads

# ==============================================================================
# SECURITY CHECKLIST
# ==============================================================================
# Before deploying, ensure:
# ✅ DEBUG=false
# ✅ SECRET_KEY and JWT_SECRET use Render's "Generate Value" feature
# ✅ CORS_ORIGINS contains only your production domain(s)
# ✅ All external service credentials are valid and active
# ✅ Database URLs use Render's service references
# ✅ HTTPS is enforced (automatic with custom domain)
# ✅ No sensitive data in version control

# ==============================================================================
# SETUP INSTRUCTIONS
# ==============================================================================
# 1. Copy this template to your Render service environment variables
# 2. Replace ALL placeholder values with real credentials
# 3. Use Render's "Generate Value" for secrets
# 4. Use Render's database references for DATABASE_URL and REDIS_URL
# 5. Update domain names to match your custom domain
# 6. Test all integrations before going live
# 7. Enable optional services only when needed

# ==============================================================================
# REQUIRED EXTERNAL SERVICES SETUP
# ==============================================================================
# Before deployment, you must set up:
# 
# 1. SUPABASE PROJECT:
#    - Create project at https://supabase.com
#    - Get URL and anon key from Project Settings > API
#    - Configure authentication providers if needed
#
# 2. POSTHOG ANALYTICS:
#    - Create project at https://posthog.com
#    - Get project key from Project Settings
#    - Configure feature flags if needed
#
# 3. SENTRY ERROR TRACKING:
#    - Create project at https://sentry.io
#    - Get DSN from Project Settings > Client Keys
#    - Configure alerts and integrations
#
# 4. CUSTOM DOMAIN (if using):
#    - Configure DNS CNAME record
#    - Verify SSL certificate provisioning
#    - Update CORS_ORIGINS and API URLs

# ==============================================================================
# TROUBLESHOOTING
# ==============================================================================
# Common issues and solutions:
#
# Build Failures:
# - Check Python and Node versions match render.yaml
# - Verify requirements.txt and package.json are valid
# - Check for missing environment variables during build
#
# Runtime Errors:
# - Verify DATABASE_URL and REDIS_URL are correct
# - Check Supabase credentials and project status
# - Ensure all required environment variables are set
#
# Connection Issues:
# - Verify CORS settings allow your domain
# - Check firewall and security group settings
# - Test database connectivity from Render console
#
# Performance Issues:
# - Monitor Render dashboard for resource usage
# - Check database query performance
# - Verify Redis cache is working correctly

# ==============================================================================