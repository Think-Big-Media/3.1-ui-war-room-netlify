name: Deploy to Render

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  RENDER_SERVICE_ID: war-room-oa9t
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        # Trigger deployment on war-room-oa9t service
        echo "üöÄ Deploying to Render service: ${{ env.RENDER_SERVICE_ID }}"
        
        # Using Render Deploy Hook if available
        if [ -n "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" ]; then
          echo "Using Deploy Hook URL"
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
        else
          # Alternative: Use Render API to trigger deployment
          echo "Using Render API"
          
          # Use correct service ID: war-room-oa9t
          SERVICE_ID="${{ env.RENDER_SERVICE_ID }}"
          
          # Trigger deployment (clear cache to force rebuild)
          curl -X POST \
            -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${SERVICE_ID}/deploys" \
            -d '{"clearCache": true}'
        fi
    
    - name: Wait for deployment to start
      run: |
        echo "‚è≥ Waiting for deployment to start..."
        sleep 30
    
    - name: Check deployment status
      run: |
        echo "üîç Checking deployment status..."
        
        # Check if the service is responding
        MAX_ATTEMPTS=20
        ATTEMPT=0
        
        while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://war-room-oa9t.onrender.com/health || echo "000")
          
          if [ "$RESPONSE" = "200" ]; then
            echo "‚úÖ Deployment successful! Service is responding."
            exit 0
          else
            echo "Attempt $((ATTEMPT + 1))/$MAX_ATTEMPTS: Service returned $RESPONSE"
            ATTEMPT=$((ATTEMPT + 1))
            sleep 30
          fi
        done
        
        echo "‚ö†Ô∏è Deployment may still be in progress. Check Render dashboard."
    
    - name: Test API Health
      if: success()
      run: |
        echo "üîç Testing API health endpoints..."
        
        # Test basic health
        curl -f https://war-room-oa9t.onrender.com/api/health/simple || echo "Simple health check not available yet"
        
        # Test full health with API status
        HEALTH_RESPONSE=$(curl -s https://war-room-oa9t.onrender.com/api/health || echo "{}")
        echo "Health response: $HEALTH_RESPONSE"
        
        # Check if APIs are configured
        if command -v jq &> /dev/null; then
          FB_CONFIG=$(echo "$HEALTH_RESPONSE" | jq -r '.services.facebook_api.configured // false')
          GOOGLE_CONFIG=$(echo "$HEALTH_RESPONSE" | jq -r '.services.google_ads_api.configured // false')
          
          if [ "$FB_CONFIG" != "true" ]; then
            echo "‚ö†Ô∏è Facebook API not configured - add env vars in Render dashboard"
          fi
          
          if [ "$GOOGLE_CONFIG" != "true" ]; then
            echo "‚ö†Ô∏è Google Ads API not configured - add env vars in Render dashboard"
          fi
        fi
    
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "‚úÖ Deployment to war-room-oa9t completed successfully"
        else
          echo "‚ùå Deployment to war-room-oa9t encountered issues"
        fi
